{"ast":null,"code":"var _jsxFileName = \"/Users/matthewcleary/projects/unmind-mood-tracker/src/pages/Insights.tsx\";\nimport React from 'react';\nimport { useGetInsights } from '../hooks';\n\nconst Spinner = () => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"spinner-border\",\n  role: \"status\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  className: \"sr-only\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }\n}, \"Loading...\"));\n\nconst Insights = () => {\n  const {\n    insights,\n    loading\n  } = useGetInsights();\n  return loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 20\n    }\n  }) : /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 34\n    }\n  }, insights);\n};\n\nexport default Insights;","map":{"version":3,"sources":["/Users/matthewcleary/projects/unmind-mood-tracker/src/pages/Insights.tsx"],"names":["React","useGetInsights","Spinner","Insights","insights","loading"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,OAAO,GAAG,mBACd;AAAK,EAAA,SAAS,EAAC,gBAAf;AAAgC,EAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAM,EAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF;;AAMA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAwBJ,cAAc,EAA5C;AAEA,SAAOI,OAAO,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,QAAL,CAA/B;AACD,CAJD;;AAMA,eAAeD,QAAf","sourcesContent":["import React from 'react';\n\nimport { useGetInsights } from '../hooks';\n\nconst Spinner = () => (\n  <div className='spinner-border' role='status'>\n    <span className='sr-only'>Loading...</span>\n  </div>\n);\n\nconst Insights = () => {\n  const { insights, loading } = useGetInsights();\n\n  return loading ? <Spinner /> : <h2>{insights}</h2>;\n};\n\nexport default Insights;\n"]},"metadata":{},"sourceType":"module"}