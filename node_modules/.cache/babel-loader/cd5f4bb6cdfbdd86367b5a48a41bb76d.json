{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport axios from 'axios';\nexport default (() => {\n  const [insights, setInsights] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    (async () => {\n      let {\n        data\n      } = await axios(`http://localhost:3000/insights`);\n      setInsights(data.insights);\n      console.log('data');\n      setLoading(false); // Ideally we'd want to wrap this in a try/catch in case this fails\n      // and render appropriate UI for the errors\n    })();\n  }, []);\n  return {\n    insights,\n    loading\n  };\n});","map":{"version":3,"sources":["/Users/matthewcleary/projects/unmind-mood-tracker/src/hooks/useGetInsights.ts"],"names":["useState","useEffect","axios","insights","setInsights","loading","setLoading","data","console","log"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,gBAAe,MAAM;AACnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAY;AACpB,KAAC,YAA2B;AAC1B,UAAI;AAAEM,QAAAA;AAAF,UAAW,MAAML,KAAK,CAAE,gCAAF,CAA1B;AACAE,MAAAA,WAAW,CAACG,IAAI,CAACJ,QAAN,CAAX;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAH,MAAAA,UAAU,CAAC,KAAD,CAAV,CAJ0B,CAM1B;AACA;AACD,KARD;AASD,GAVQ,EAUN,EAVM,CAAT;AAYA,SAAO;AAAEH,IAAAA,QAAF;AAAYE,IAAAA;AAAZ,GAAP;AACD,CAjBD","sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport default () => {\n  const [insights, setInsights] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect((): void => {\n    (async (): Promise<void> => {\n      let { data } = await axios(`http://localhost:3000/insights`);\n      setInsights(data.insights);\n      console.log('data');\n      setLoading(false);\n\n      // Ideally we'd want to wrap this in a try/catch in case this fails\n      // and render appropriate UI for the errors\n    })();\n  }, []);\n\n  return { insights, loading };\n};\n"]},"metadata":{},"sourceType":"module"}